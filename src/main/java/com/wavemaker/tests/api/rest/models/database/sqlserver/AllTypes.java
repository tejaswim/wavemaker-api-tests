/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.tests.api.rest.models.database.sqlserver;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.Objects;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * AllTypes generated by WaveMaker Studio.
 */

public class AllTypes {

    private Integer pkId;
    private Integer integerColumn;
    private Short shortColumn;
    private Long longColumn;
    private Float floatColumn;
    private BigDecimal doubleColumn;
    private BigInteger bigintegerColumn;
    private BigDecimal bigdecimalColumn;
    private Byte byteColumn;
    private String stringColumn;
    private String textColumn;
    private String clobColumn;
    private String characterColumn;
    @Type(type = "DateTime")
    private LocalDateTime dateColumn;
    @Type(type = "DateTime")
    private Time timeColumn;
    @Type(type = "DateTime")
    private LocalDateTime datetimeColumn;
    private Timestamp timestampColumn;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobColumn;
    private boolean booleanCol;
    @Type(type = "DateTime")
    private LocalDateTime column19;

    public Integer getPkId() {
        return pkId;
    }

    public void setPkId(final Integer pkId) {
        this.pkId = pkId;
    }

    public Integer getIntegerColumn() {
        return integerColumn;
    }

    public void setIntegerColumn(final Integer integerColumn) {
        this.integerColumn = integerColumn;
    }

    public Short getShortColumn() {
        return shortColumn;
    }

    public void setShortColumn(final Short shortColumn) {
        this.shortColumn = shortColumn;
    }

    public Long getLongColumn() {
        return longColumn;
    }

    public void setLongColumn(final Long longColumn) {
        this.longColumn = longColumn;
    }

    public Float getFloatColumn() {
        return floatColumn;
    }

    public void setFloatColumn(final Float floatColumn) {
        this.floatColumn = floatColumn;
    }

    public BigDecimal getDoubleColumn() {
        return doubleColumn;
    }

    public void setDoubleColumn(final BigDecimal doubleColumn) {
        this.doubleColumn = doubleColumn;
    }

    public BigInteger getBigintegerColumn() {
        return bigintegerColumn;
    }

    public void setBigintegerColumn(final BigInteger bigintegerColumn) {
        this.bigintegerColumn = bigintegerColumn;
    }

    public BigDecimal getBigdecimalColumn() {
        return bigdecimalColumn;
    }

    public void setBigdecimalColumn(final BigDecimal bigdecimalColumn) {
        this.bigdecimalColumn = bigdecimalColumn;
    }

    public Byte getByteColumn() {
        return byteColumn;
    }

    public void setByteColumn(final Byte byteColumn) {
        this.byteColumn = byteColumn;
    }

    public String getStringColumn() {
        return stringColumn;
    }

    public void setStringColumn(final String stringColumn) {
        this.stringColumn = stringColumn;
    }

    public String getTextColumn() {
        return textColumn;
    }

    public void setTextColumn(final String textColumn) {
        this.textColumn = textColumn;
    }

    public String getClobColumn() {
        return clobColumn;
    }

    public void setClobColumn(final String clobColumn) {
        this.clobColumn = clobColumn;
    }

    public String getCharacterColumn() {
        return characterColumn;
    }

    public void setCharacterColumn(final String characterColumn) {
        this.characterColumn = characterColumn;
    }

    public LocalDateTime getDateColumn() {
        return dateColumn;
    }

    public void setDateColumn(final LocalDateTime dateColumn) {
        this.dateColumn = dateColumn;
    }

    public Time getTimeColumn() {
        return timeColumn;
    }

    public void setTimeColumn(final Time timeColumn) {
        this.timeColumn = timeColumn;
    }

    public LocalDateTime getDatetimeColumn() {
        return datetimeColumn;
    }

    public void setDatetimeColumn(final LocalDateTime datetimeColumn) {
        this.datetimeColumn = datetimeColumn;
    }

    public Timestamp getTimestampColumn() {
        return timestampColumn;
    }

    public void setTimestampColumn(final Timestamp timestampColumn) {
        this.timestampColumn = timestampColumn;
    }

    public byte[] getBlobColumn() {
        return blobColumn;
    }

    public void setBlobColumn(final byte[] blobColumn) {
        this.blobColumn = blobColumn;
    }

    public boolean isBooleanCol() {
        return booleanCol;
    }

    public void setBooleanCol(final boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    public LocalDateTime getColumn19() {
        return column19;
    }

    public void setColumn19(final LocalDateTime column19) {
        this.column19 = column19;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AllTypes)) return false;
        final AllTypes allTypes = (AllTypes) o;
        return Objects.equals(getPkId(), allTypes.getPkId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkId());
    }

    @Override
    public String toString() {
        return "AllTypes{" +
                "pkId=" + pkId +
                ", integerColumn=" + integerColumn +
                ", shortColumn=" + shortColumn +
                ", longColumn=" + longColumn +
                ", floatColumn=" + floatColumn +
                ", doubleColumn=" + doubleColumn +
                ", bigintegerColumn=" + bigintegerColumn +
                ", bigdecimalColumn=" + bigdecimalColumn +
                ", byteColumn=" + byteColumn +
                ", stringColumn='" + stringColumn + '\'' +
                ", textColumn='" + textColumn + '\'' +
                ", clobColumn='" + clobColumn + '\'' +
                ", characterColumn='" + characterColumn + '\'' +
                ", dateColumn=" + dateColumn +
                ", timeColumn=" + timeColumn +
                ", datetimeColumn=" + datetimeColumn +
                ", timestampColumn=" + timestampColumn +
                ", blobColumn=" + Arrays.toString(blobColumn) +
                ", booleanCol=" + booleanCol +
                ", column19=" + column19 +
                '}';
    }
}

